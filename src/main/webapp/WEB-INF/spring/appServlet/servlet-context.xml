<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<!-- Tiles 설정 시작 -->
	<beans:bean id="tilesConfigurer"
			class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="tilesViewResolver"
			class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" 
				value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1"/>
	</beans:bean>
	
	<!-- Tiles 설정 끝 -->
	
	<!-- google Class Bean 설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<beans:bean id="googleConnectionFactory"
			class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="700364105784-fgubl6198ff11i0sivk3bhgt0u6rj3uk.apps.googleusercontent.com" /> <!-- 구글 디벨로프에서 받은 클라이언트 ID를 value에 넣는다. -->
		<beans:constructor-arg value="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" /> <!-- 구글 디벨로프에서 받은 보안 ID를 value에 넣는다. -->
	</beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="openid https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile" />
		<beans:property name="redirectUri" value="http://localhost:80/oauth2callback" /> <!-- 승인된 리디렉션 URI와 완전히 일치해야함. -->
	</beans:bean>
	
	<!-- kr.or.ddit 패키지를 컴포넌트 스캔 대상으로 함 -->
	<context:component-scan base-package="kr.or.ddit" />
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <beans:property name="maxUploadSize" value="5242880" />
      <beans:property name="defaultEncoding" value="utf-8" />
   	</beans:bean>
	
</beans:beans>
