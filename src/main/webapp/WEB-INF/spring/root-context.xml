<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
      
	<!-- Root Context: defines shared resources visible to all other web components -->
	
  	<!-- dataSource : 데이터베이스와 관련된 정보를 설정 -->
  	<bean id="dataSource"
      	class="org.apache.commons.dbcp2.BasicDataSource"
      	destroy-method="close">
      	<property name="driverClassName"
         	value="oracle.jdbc.driver.OracleDriver" />
      	<property name="url"
         	value="jdbc:oracle:thin:@112.220.114.130:1521:xe" />
      	<property name="username" value="team4_202203F" /> 
      	<property name="password" value="java" />
   	</bean>
   	
   	<!-- xml 위치 지정 -->
   	<bean id="sqlSessionFactory"
      	class="org.mybatis.spring.SqlSessionFactoryBean">
      	<property name="dataSource" ref="dataSource"></property>
      	<property name="mapperLocations"
         	value="classpath:/sqlmap/**/*_SQL.xml" />
      	<property name="configLocation"
         	value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
   	</bean> 
   	
   	<!-- query 실행 -->
   	<bean id="sqlSessionTemplate"
      	class="org.mybatis.spring.SqlSessionTemplate">
      	<constructor-arg index="0" ref="sqlSessionFactory" />
   	</bean>
	
	<!-- 트랜잭션 관리자의 빈을 정의 -->
   	<bean id="transactionManager" 
   		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      	<property name="dataSource" ref="dataSource"></property>
   	</bean>
   
   
   	<!-- 애너테이션 기반의 트랜잭션 제어를 활성화함
   	<tx:annotation-driven/>	 -->
   	
   	<!-- Mapper Interface 설정 -->
   	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   		<property name="basePackage" value="kr.or.ddit.mapper" />
   	</bean>
   	
   	<!-- 이메일 인증 관련 빈 등록 -->
   	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" >
		<property name="host" value="smtp.naver.com" />
<!-- 		<property name="port" value="465" /> -->
		<property name="port" value="587" />
		<property name="username" value="shgok123@naver.com" />
		<property name="password" value="Tlsgusrnr12~" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtps.ssl.checkserveridentity">true</prop>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtps.ssl.trust">*</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
			</props>
		</property>
	</bean>
</beans>
